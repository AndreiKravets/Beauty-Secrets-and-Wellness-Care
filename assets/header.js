"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,_toPropertyKey(n.key),n)}}function _createClass(t,e,r){return e&&_defineProperties(t.prototype,e),r&&_defineProperties(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0===r)return("string"===e?String:Number)(t);r=r.call(t,e||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_setPrototypeOf(t,e)}function _createSuper(r){var n=_isNativeReflectConstruct();return function(){var t,e=_getPrototypeOf(r);return _possibleConstructorReturn(this,n?(t=_getPrototypeOf(this).constructor,Reflect.construct(e,arguments,t)):e.apply(this,arguments))}}function _possibleConstructorReturn(t,e){if(e&&("object"===_typeof(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(t)}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _wrapNativeSuper(t){var r="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function(t){if(null===t||!_isNativeFunction(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,e)}function e(){return _construct(t,arguments,_getPrototypeOf(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(e,t)})(t)}function _construct(t,e,r){return(_construct=_isNativeReflectConstruct()?Reflect.construct.bind():function(t,e,r){var n=[null];n.push.apply(n,e);e=new(Function.bind.apply(t,n));return r&&_setPrototypeOf(e,r.prototype),e}).apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(t){return!1}}function _isNativeFunction(t){return-1!==Function.toString.call(t).indexOf("[native code]")}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}!function n(o,i,u){function c(e,t){if(!i[e]){if(!o[e]){var r="function"==typeof require&&require;if(!t&&r)return r(e,!0);if(f)return f(e,!0);throw(t=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",t}r=i[e]={exports:{}},o[e][0].call(r.exports,function(t){return c(o[e][1][t]||t)},r,r.exports,n,o,i,u)}return i[e].exports}for(var f="function"==typeof require&&require,t=0;t<u.length;t++)c(u[t]);return c}({1:[function(t,e,r){customElements.get("s-header")||customElements.define("s-header",function(){_inherits(e,_wrapNativeSuper(HTMLElement));var t=_createSuper(e);function e(){return _classCallCheck(this,e),t.call(this)}return _createClass(e,[{key:"connectedCallback",value:function(){this.mobMenu(),this.stickyHeader()}},{key:"mobMenu",value:function(){var t=this;this.querySelector(".s-header__menu-btn").addEventListener("click",function(){return t.classList.toggle("s-header--menu-active"),document.querySelector("body").classList.toggle("hidden")})}},{key:"stickyHeader",value:function(){console.log(this.getAttribute("data-sticky")),window.addEventListener("scroll",function(){console.log(document.documentElement.scrollTop),100<document.documentElement.scrollTop&&document.getElementById("shopify-section-header").classList.add("sticky")})}}]),e}())},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvaGVhZGVyLmpzIiwiaGVhZGVyLmpzIl0sIm5hbWVzIjpbInIiLCJlIiwibiIsInQiLCJvIiwiaSIsImYiLCJjIiwicmVxdWlyZSIsInUiLCJhIiwiRXJyb3IiLCJjb2RlIiwicCIsImV4cG9ydHMiLCJjYWxsIiwibGVuZ3RoIiwiMSIsIm1vZHVsZSIsImN1c3RvbUVsZW1lbnRzIiwiZ2V0IiwiZGVmaW5lIiwiX2luaGVyaXRzIiwiU0hlYWRlciIsIl93cmFwTmF0aXZlU3VwZXIiLCJIVE1MRWxlbWVudCIsIl9zdXBlciIsIl9jcmVhdGVTdXBlciIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsIm1vYk1lbnUiLCJzdGlja3lIZWFkZXIiLCJfdGhpcyIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiZG9jdW1lbnQiLCJjb25zb2xlIiwibG9nIiwiZ2V0QXR0cmlidXRlIiwid2luZG93IiwiZG9jdW1lbnRFbGVtZW50Iiwic2Nyb2xsVG9wIiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGQiXSwibWFwcGluZ3MiOiJxM0dBQUEsQ0FBQSxTQUFBQSxFQUFBQyxFQUFBQyxFQUFBQyxHQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEdBQUEsR0FBQSxDQUFBSixFQUFBRyxHQUFBLENBQUEsR0FBQSxDQUFBSixFQUFBSSxHQUFBLENBQUEsSUFBQUUsRUFBQSxZQUFBLE9BQUFDLFNBQUFBLFFBQUEsR0FBQSxDQUFBRixHQUFBQyxFQUFBLE9BQUFBLEVBQUFGLEVBQUEsQ0FBQSxDQUFBLEVBQUEsR0FBQUksRUFBQSxPQUFBQSxFQUFBSixFQUFBLENBQUEsQ0FBQSxFQUFBLE1BQUFLLEVBQUEsSUFBQUMsTUFBQSx1QkFBQU4sRUFBQSxHQUFBLEdBQUFPLEtBQUEsbUJBQUFGLENBQUEsQ0FBQUcsRUFBQVgsRUFBQUcsR0FBQSxDQUFBUyxRQUFBLEVBQUEsRUFBQWIsRUFBQUksR0FBQSxHQUFBVSxLQUFBRixFQUFBQyxRQUFBLFNBQUFkLEdBQUEsT0FBQUksRUFBQUgsRUFBQUksR0FBQSxHQUFBTCxJQUFBQSxDQUFBLENBQUEsRUFBQWEsRUFBQUEsRUFBQUMsUUFBQWQsRUFBQUMsRUFBQUMsRUFBQUMsQ0FBQSxDQUFBLENBQUEsT0FBQUQsRUFBQUcsR0FBQVMsT0FBQSxDQUFBLElBQUEsSUFBQUwsRUFBQSxZQUFBLE9BQUFELFNBQUFBLFFBQUFILEVBQUEsRUFBQUEsRUFBQUYsRUFBQWEsT0FBQVgsQ0FBQSxHQUFBRCxFQUFBRCxFQUFBRSxFQUFBLEVBQUEsT0FBQUQsQ0FBQSxFQUFBLENBQUFhLEVBQUEsQ0FBQSxTQUFBVCxFQUFBVSxFQUFBSixHQ0FBSyxlQUFBQyxJQUFBLFVBQUEsR0FFQUQsZUFBQUUsT0FBQSxXQUFBLFdBQUFDLFVBQUFDLEVBOEJBQyxpQkE5QkFDLFdBQUEsQ0FBQSxFQUFBLElBQUFDLEVBQUFDLGFBQUFKLENBQUEsRUFDQSxTQUFBQSxJQUFBLE9BQUFLLGdCQUFBQyxLQUFBTixDQUFBLEVBQUFHLEVBQUFYLEtBQUFjLElBQUEsQ0FFQSxDQTJCQSxPQTNCQUMsYUFBQVAsRUFBQSxDQUFBLENBQUFRLElBQUEsb0JBQUFDLE1BRUEsV0FDQUgsS0FBQUksUUFBQSxFQUNBSixLQUFBSyxhQUFBLENBQ0EsQ0FBQSxFQUFBLENBQUFILElBQUEsVUFBQUMsTUFFQSxXQUFBLElBQUFHLEVBQUFOLEtBQ0FBLEtBQUFPLGNBQUEscUJBQUEsRUFDQUMsaUJBQ0EsUUFBQSxXQUFBLE9BQ0FGLEVBQUFHLFVBQUFDLE9BQUEsdUJBQUEsRUFDQUMsU0FBQUosY0FBQSxNQUFBLEVBQUFFLFVBQUFDLE9BQUEsUUFBQSxDQUFBLENBQ0EsQ0FFQSxDQUFBLEVBQUEsQ0FBQVIsSUFBQSxlQUFBQyxNQUVBLFdBQ0FTLFFBQUFDLElBQUFiLEtBQUFjLGFBQUEsYUFBQSxDQUFBLEVBUUFDLE9BQUFQLGlCQUFBLFNBQUEsV0FOQUksUUFBQUMsSUFBQUYsU0FBQUssZ0JBQUFDLFNBQUEsRUFDQSxJQUFBTixTQUFBSyxnQkFBQUMsV0FDQU4sU0FBQU8sZUFBQSx3QkFBQSxFQUFBVCxVQUFBVSxJQUFBLFFBQUEsQ0FJQSxDQUFBLENBQ0EsQ0FBQSxFQUFBLEVBQUF6QixDQUFBLEVBOUJBLENBQUEsQ0NvQ0EsRUFBRSxHRnRDRixFQUFBLEdBQUEsQ0FBQSxFQUFBIiwiZmlsZSI6ImhlYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJpZighY3VzdG9tRWxlbWVudHMuZ2V0KCdzLWhlYWRlcicpKXtcclxuXHJcbiAgY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdzLWhlYWRlcicsIGNsYXNzIFNIZWFkZXIgZXh0ZW5kcyBIVE1MRWxlbWVudHtcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgIHN1cGVyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29ubmVjdGVkQ2FsbGJhY2soKXtcclxuICAgICAgdGhpcy5tb2JNZW51KClcclxuICAgICAgdGhpcy5zdGlja3lIZWFkZXIoKVxyXG4gICAgfVxyXG5cclxuICAgIG1vYk1lbnUoKSB7XHJcbiAgICAgIHRoaXMucXVlcnlTZWxlY3RvcignLnMtaGVhZGVyX19tZW51LWJ0bicpLlxyXG4gICAgICBhZGRFdmVudExpc3RlbmVyKFxyXG4gICAgICAgIFwiY2xpY2tcIiwgKCkgPT4gKFxyXG4gICAgICAgICAgdGhpcy5jbGFzc0xpc3QudG9nZ2xlKCdzLWhlYWRlci0tbWVudS1hY3RpdmUnKSxcclxuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGRlbicpXHJcbiAgICAgICAgKVxyXG4gICAgICApXHJcbiAgICB9XHJcblxyXG4gICAgc3RpY2t5SGVhZGVyKCkge1xyXG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS1zdGlja3knKSk7XHJcbiAgICAgIGZ1bmN0aW9uIGFkZFN0aWNreSgpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3ApO1xyXG4gICAgICAgIGlmKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgPiAxMDApe1xyXG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Nob3BpZnktc2VjdGlvbi1oZWFkZXInKS5jbGFzc0xpc3QuYWRkKCdzdGlja3knKVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsICgpID0+IGFkZFN0aWNreSgpKVxyXG4gICAgfVxyXG5cclxuICB9KVxyXG5cclxufSIsIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkoezE6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuaWYoIWN1c3RvbUVsZW1lbnRzLmdldCgncy1oZWFkZXInKSl7XHJcblxyXG4gIGN1c3RvbUVsZW1lbnRzLmRlZmluZSgncy1oZWFkZXInLCBjbGFzcyBTSGVhZGVyIGV4dGVuZHMgSFRNTEVsZW1lbnR7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbm5lY3RlZENhbGxiYWNrKCl7XHJcbiAgICAgIHRoaXMubW9iTWVudSgpXHJcbiAgICAgIHRoaXMuc3RpY2t5SGVhZGVyKClcclxuICAgIH1cclxuXHJcbiAgICBtb2JNZW51KCkge1xyXG4gICAgICB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5zLWhlYWRlcl9fbWVudS1idG4nKS5cclxuICAgICAgYWRkRXZlbnRMaXN0ZW5lcihcclxuICAgICAgICBcImNsaWNrXCIsICgpID0+IChcclxuICAgICAgICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgncy1oZWFkZXItLW1lbnUtYWN0aXZlJyksXHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKS5jbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nKVxyXG4gICAgICAgIClcclxuICAgICAgKVxyXG4gICAgfVxyXG5cclxuICAgIHN0aWNreUhlYWRlcigpIHtcclxuICAgICAgY29uc29sZS5sb2codGhpcy5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3RpY2t5JykpO1xyXG4gICAgICBmdW5jdGlvbiBhZGRTdGlja3koKXtcclxuICAgICAgICBjb25zb2xlLmxvZyhkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wKTtcclxuICAgICAgICBpZihkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wID4gMTAwKXtcclxuICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaG9waWZ5LXNlY3Rpb24taGVhZGVyJykuY2xhc3NMaXN0LmFkZCgnc3RpY2t5JylcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCAoKSA9PiBhZGRTdGlja3koKSlcclxuICAgIH1cclxuXHJcbiAgfSlcclxuXHJcbn1cbn0se31dfSx7fSxbMV0pXG5cbiJdfQ==
